version: 0.2

environment_variables:
  plaintext:
    DJANGO_SETTINGS_MODULE: config.settings.test
    SECRET_KEY: nosecret
    DATABASE_DEFAULT_URL: sqlite:///db1.sqlite3
    DATABASE_STREAMDATA_URL: sqlite:///db2.sqlite3
    OPBEAT_ENABLED: False
env:
  secrets-manager:
    DOCKERHUB_PASS: "arn:aws:secretsmanager:eu-west-1:447827107758:secret:docker_cred-XFW5lf:DOCKERHUB_PASS"
    DOCKERHUB_USERNAME: "arn:aws:secretsmanager:eu-west-1:447827107758:secret:docker_cred-XFW5lf:DOCKERHUB_USERNAME"
phases:
  install:
    runtime-versions:
      python: 3.11
  pre_build:
    commands:
      - echo logging in to Dockerhub
      - docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASS
      - echo logging in to Amazon ECR....
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 447827107758.dkr.ecr.eu-west-1.amazonaws.com
      - REPOSITORY_URI=447827107758.dkr.ecr.eu-west-1.amazonaws.com/projectapplication
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file....
      - printf '{"ImageURI":"%s:%s"}' $REPOSITORY_URI $IMAGE_TAG > imageDetail.json
artifacts:
    files:
      - imageDetail.json